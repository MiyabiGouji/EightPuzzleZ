// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext.versions = [
            'compileSdk'           : 30,
            'minSdk'               : 21,
            'targetSdk'            : 30,
            'buildTools'           : '30.0.1',
            'kotlin'               : '1.4.0-rc',
            'kotlinCoroutine'      : '1.3.8-1.4.0-rc',
            'appCompat'            : '1.2.0-rc02',
            'coreKtx'              : '1.3.1',
            'constraintLayout'     : '2.0.0-rc1',
            'architectureComponent': '1.1.1',
            'junit'                : '4.13',
            'androidxJunit'        : '1.1.1',
            'espresso'             : '3.2.0'
    ]

    repositories {
        google()
        jcenter()

        // for kotlin 1.4-RC
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

allprojects {
    repositories {
        google()
        jcenter()

        // for kotlin 1.4-RC
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

subprojects {
    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                // Force all of the primary support libraries to use the same version.
                if (details.requested.group == 'android.arch.lifecycle') {
                    details.useVersion versions.architectureComponent
                }
                if (details.requested.group == 'com.android.support'
                        && details.requested.name != 'multidex'
                        && details.requested.name != 'multidex-instrumentation') {
                    details.useVersion versions.supportLibrary
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

wrapper {
    gradleVersion = '6.5.1'
    distributionType = Wrapper.DistributionType.ALL
}
